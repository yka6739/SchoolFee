@model SchoolManagement.Models.Registration

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/Master.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Registration</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.REGId)
        <div class="card-header bg-info">
            <h4 class="m-b-0 text-white">Student Admission</h4>
        </div>
        <div class="form-group invisible">
            @Html.LabelFor(model => model.Session, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Session, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Session, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">


            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })

                @Html.DropDownList("Select Type",
                    new SelectList(Enum.GetValues(typeof(SchoolManagement.Models.Type))),
                    "Select Type",
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.AddmissionNumber, htmlAttributes: new { @class = "control-label" })
                <span class="text-danger">*</span>
                @Html.EditorFor(model => model.AddmissionNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddmissionNumber, "", new { @class = "text-danger" })

            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.RollNumber, htmlAttributes: new { @class = "control-label" })
                <span class="text-danger">*</span>
                @Html.EditorFor(model => model.RollNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RollNumber, "", new { @class = "text-danger" })

            </div>


            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.CID, "Class", htmlAttributes: new { @class = "control-label" })
                <span class="text-danger">*</span>
                @Html.DropDownList("CID", null, "Select Class", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CID, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.SCID, "Section", htmlAttributes: new { @class = "control-label " })
                <span class="text-danger">*</span>
                @Html.DropDownList("SCID", null, "Select Section", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SCID, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="row">
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label " })
                <span class="text-danger">*</span>
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label " })

                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label " })
                <span class="text-danger">*</span>
                @Html.DropDownList("StudentGender",
                    new SelectList(Enum.GetValues(typeof(SchoolManagement.Models.Gender))),
                    "Select Gender",
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.DOB, "Date Of Birth", htmlAttributes: new { @class = "control-label " })

                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.CatID, "Category", htmlAttributes: new { @class = "control-label" })

                @Html.DropDownList("CatID", null, "Select Category", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CatID, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label" })
                <span class="text-danger">*</span>
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })

                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

            </div>


        </div>
        <div class="row">
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.AdmissionDate, htmlAttributes: new { @class = "control-label " })

                @Html.EditorFor(model => model.AdmissionDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdmissionDate, "", new { @class = "text-danger" })

            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="card-header bg-info">
            <h4 class="m-b-0 text-white">Parent Detail</h4>
        </div>
        <br /><br />
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.FatherPhone, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.FatherPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FatherPhone, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.FatherOccupation, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.FatherOccupation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FatherOccupation, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="row">

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.MotherPhone, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.MotherPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MotherPhone, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.MotherOccupation, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.MotherOccupation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MotherOccupation, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="card-header bg-info">
            <h4 class="m-b-0 text-white">More Detail</h4>
        </div>
        <br /><br />
        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.CurrentAddress, htmlAttributes: new { @class = "control-label" })
                <span class="text-danger">*</span>
                @Html.EditorFor(model => model.CurrentAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentAddress, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.ParmanentAddress, htmlAttributes: new { @class = "control-label " })

                @Html.EditorFor(model => model.ParmanentAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ParmanentAddress, "", new { @class = "text-danger" })

            </div>


            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.AadharNumber, htmlAttributes: new { @class = "control-label" })
                <span class="text-danger">*</span>
                @Html.EditorFor(model => model.AadharNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AadharNumber, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.TID, "Transport Charges", htmlAttributes: new { @class = "control-label" })

                @Html.DropDownList("TID", null, "Select Transport", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TID, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.SpecialCase, htmlAttributes: new { @class = "control-label" })

                <div class="checkbox">
                    @Html.EditorFor(model => model.SpecialCase)
                    @Html.ValidationMessageFor(model => model.SpecialCase, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })

            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
